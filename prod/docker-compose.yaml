version: '3.8'

services:
  api-gateway:
    image: api-gateway
    build:
      context: ../../api-gateway
      dockerfile: ../api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - notification-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - backend

  user-service:
    image: user-service
    build:
      context: ../../user-service
      dockerfile: ../user-service/Dockerfile
    depends_on:
      - postgres-users
      - mongo
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - backend

  present-service:
    image: present-service
    build:
      context: ../../present-service
      dockerfile: ../present-service/Dockerfile
    depends_on:
      - postgres-presents
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - backend

  notification-service:
    image: notification-service
    build:
      context: ../../notification-service
      dockerfile: ../notification-service/Dockerfile
    depends_on:
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
      - backend

  postgres-users:
    image: postgres:latest
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    volumes:
      - ./postgres-data-users:/var/lib/postgresql/data
    networks:
      - backend

  postgres-presents:
    image: postgres:latest
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: presents
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_password
    volumes:
      - ./postgres-data-presents:/var/lib/postgresql/data
    networks:
      - backend

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    volumes:
      - ./mongo-data:/data/db
    networks:
      - backend

  zookeeper:
    #    image: wurstmeister/zookeeper:3.4.6
    image: zookeeper:3.8
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - backend

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data

networks:
  backend:
    driver: bridge